import static com.sun.javafx.fxml.expression.Expression.not;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Date;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Anindita
 */
public class LibraryManagementSystem extends javax.swing.JFrame implements ActionListener
{
    private String loan_ID;

    /**
     * Creates new form LibraryManagementSystem
     */
    public LibraryManagementSystem() {
        initComponents();
        
        jButton1.addActionListener(this);
        jButton2.addActionListener(this);
        jButton3.addActionListener(this);
        jButton4.addActionListener(this);
        jButton5.addActionListener(this);
        jButton6.addActionListener(this);
        jButton7.addActionListener(this);
        jButton8.addActionListener(this); 
        jButton9.addActionListener(this);
        
        
         
        String[] ColumnNamesforCheckIn = {"Loan ID","Book ID","Branch ID","Card Number","Date out","Due date","Date in"};
        model = new DefaultTableModel(ColumnNamesforCheckIn, 0); 
        tableForBookCheckIn = new JTable(model); 
        frameForBookCheckIn = new JFrame("Books Borrowed");
        frameForBookCheckIn.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);    
        frameForBookCheckIn.setSize(400,400);
        
        
        String[] ColumnNamesforFine = {"Card Number","Total Fine($)","Paid"};
        model1 = new DefaultTableModel(ColumnNamesforFine, 0); 
        tableForFine = new JTable(model); 
        frameForFine = new JFrame("Fines");
        frameForFine.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);    
        frameForFine.setSize(400,400);
        
        String[] ColumnNamesforPayFine = {"Card Number","Loan ID","Fine($)","Paid"};
        model2 = new DefaultTableModel(ColumnNamesforPayFine, 0); 
        tableForPayFine = new JTable(model2); 
        frameForPayFine = new JFrame("Pay Fine");
        frameForPayFine.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);    
        frameForPayFine.setSize(400,400);
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jTextField13 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTextField14 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jTextField20 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jLabel4.setText("Book ID");

        jLabel5.setText("Title");

        jLabel6.setText("Author");

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField18ActionPerformed(evt);
            }
        });

        jLabel17.setText("Author's firstname");

        jLabel18.setText("Author's middlename");

        jLabel19.setText("Author's lastname");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .addComponent(jTextField17, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField19, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField18, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField5)
                    .addComponent(jTextField4))
                .addGap(123, 123, 123)
                .addComponent(jButton2)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Book Search", jPanel5);

        jLabel7.setText("Book ID");

        jLabel8.setText("Branch ID");

        jLabel9.setText("Card Number");

        jButton3.setText("Check out");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(34, 34, 34)
                        .addComponent(jTextField1))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(24, 24, 24)
                        .addComponent(jTextField2)))
                .addGap(139, 139, 139)
                .addComponent(jButton3)
                .addGap(73, 73, 73))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButton3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Check out", jPanel6);

        jLabel10.setText("First name");

        jLabel11.setText("Last name");

        jLabel12.setText("Address");

        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });

        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });

        jButton4.setText("Create new");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel15.setText("Phone");

        jButton5.setText("Search");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel15))
                .addGap(37, 37, 37)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                    .addComponent(jTextField12)
                    .addComponent(jTextField15)
                    .addComponent(jTextField11))
                .addGap(109, 109, 109)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(59, 59, 59))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(22, 22, 22)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Borrower", jPanel8);

        jLabel1.setText("Book ID");

        jLabel2.setText("Card Number");

        jLabel3.setText("First name");

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jButton1.setText("Check in");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Last name");

        jButton6.setText("Show loaned book(s)");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextField13.setEditable(false);
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jLabel13.setText(" loan_id");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(jTextField8)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel16))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField16)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(60, 60, 60))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(89, 89, 89))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(104, 104, 104))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Check in", jPanel7);

        jButton8.setText("Show Fines");

        jButton7.setText("Paid ");

        jTextField14.setEditable(false);
        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField14ActionPerformed(evt);
            }
        });

        jLabel20.setText("loan_id");

        jButton9.setText("Pay Fine?");

        jTextField20.setEditable(false);
        jTextField20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField20ActionPerformed(evt);
            }
        });

        jLabel21.setText("card_no");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(94, 94, 94))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField14))
                .addGap(82, 82, 82))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton8))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addGap(30, 30, 30)
                .addComponent(jButton7)
                .addGap(77, 77, 77))
        );

        jTabbedPane2.addTab("Fines", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField18ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ActionPerformed

    private void jTextField20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField20ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibraryManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibraryManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibraryManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibraryManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LibraryManagementSystem().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables


     //loaned books table declaration
     JTable tableForBookCheckIn;
     DefaultTableModel model;
     JFrame frameForBookCheckIn;
     Object dataCheckIn[][];
     
      //show fines table declaration
     JTable tableForFine;
     DefaultTableModel model1;
     JFrame frameForFine;
     Object dataFine[][];
     
      //pay fines table declaration
     JTable tableForPayFine;
     DefaultTableModel model2;
     JFrame frameForPayFine;
     Object dataPayFine[][];
    
     @Override
    public void actionPerformed(ActionEvent e) {
        
        Object source = e.getSource();
        
        String book_id = new String();
        String title = new String();
        String author_name = new String();
        String a_fname = new String();
        String a_minit = new String();
        String a_lname = new String();
        int branch_id;
        String branch_address = new String();
        int no_of_copies;
        int card_no;
        String fname = new String();
        String lname = new String();
        String borrower_address = new String();
        //int Loan = Integer.valueOf(jTextField13.getText());               
        String phone = new String();
                            
        //book search
        if ( jButton2 == source)
	{		
	   
           book_id = String.valueOf(jTextField4.getText());
           title  = String.valueOf(jTextField5.getText());
           author_name = String.valueOf(jTextField6.getText());
           a_fname = String.valueOf(jTextField17.getText());
           a_minit = String.valueOf(jTextField18.getText());
           a_lname = String.valueOf(jTextField19.getText());
           
           
           try
           {
             Connection conn = DriverManager.getConnection(
                          "jdbc:mysql://localhost:3306/library?zeroDateTimeBehavior=convertToNull","root","password"); 
                 
             if((book_id.equals("")) && (title.equals("")) && (author_name.equals("")) && ( a_fname.equals("")) && ( a_minit.equals("")) && ( a_lname.equals("")))
                {
                  JOptionPane.showMessageDialog(null, "Please enter values.");
                  
                }
             else
             {
             /*
             PreparedStatement stmt = conn.prepareStatement( 
                     "Select library_branch.branch_id, book.book_id, book.title, book_authors.author_name, book_copies.no_of_copies as total,(book_copies.no_of_copies- count(book_loans.book_id)) as available "+      
                     "From ((((book_authors left outer join book on book.book_id=book_authors.book_id) left outer JOIN book_copies ON book.book_id = book_copies.book_id) left outer JOIN library_branch ON book_copies.branch_id = library_branch.branch_id) LEFT OUTER JOIN book_loans ON book_loans.book_id=book.book_id AND book_loans.branch_id = book_copies.branch_id) "+
                     "Where (book.book_id in (select book_id from book_authors where book_authors.author_name like ? or book_authors.fname like ? or book_authors.minit like ? or book_authors.lname like ? ) and (book_loans.date_in is null)) "+
                     "Group by book_copies.branch_id, book_loans.book_id, book.title "+
                     "Having (book.book_id like ? and book.title like ? )" +
                     "Order by book.book_id "); 
             */
              PreparedStatement stmt = conn.prepareStatement( 
                     "Select library_branch.branch_id, book.book_id, book.title, book_authors.author_name, book_copies.no_of_copies as total,(book_copies.no_of_copies- count(book_loans.book_id)) as available "+      
                     "From ((((book_authors left outer join book on book.book_id=book_authors.book_id) left outer JOIN book_copies ON book.book_id = book_copies.book_id) left outer JOIN library_branch ON book_copies.branch_id = library_branch.branch_id) LEFT OUTER JOIN book_loans ON book_loans.book_id=book.book_id AND book_loans.branch_id = book_copies.branch_id) "+
                     "Where (book.book_id in (select book_id from book_authors where book_authors.author_name like ? and book_authors.fname like ? and book_authors.minit like ? and book_authors.lname like ? ) and (book_loans.date_in is null)) "+
                     "Group by book_copies.branch_id, book_loans.book_id, book.title "+
                     "Having (book.book_id like ? and book.title like ? )" +
                     "Order by book.book_id ");
                     
                                      
            
            stmt.setString(1,"%"+author_name+"%");
            stmt.setString(2,"%"+a_fname+"%");
            stmt.setString(3,"%"+a_minit+"%"); 
            stmt.setString(4,"%"+a_lname+"%");
            stmt.setString(5,"%"+book_id+"%");
            stmt.setString(6,"%"+title+"%");
            
                                  
            ResultSet rset = stmt.executeQuery();
            int rowCount = 0;
           
               while(rset.next())
              {
    
               rowCount = rowCount + 1;
              }
            System.out.println("rowCount" + rowCount);
            
            Object data[][] = new Object[rowCount][6];
            rset.beforeFirst(); 
         
             for(int i=0;i<=(rowCount-1);i++)
             {
             if(rset.next()) 
              {   
                      
                      
                      data[i][0] = rset.getString("book_id");
                      data[i][1] = rset.getString("branch_id");
                      data[i][2] = rset.getString("title");
                      data[i][3] = rset.getString("author_name");
                      data[i][4] = rset.getString("total");
                      data[i][5] = rset.getString("available");
                     
               }
                 
            }
         
           String[] ColumnNames = {"Book ID","Branch ID","Title","Author name","Total","Available"};
	              	   
           final JTable table = new JTable(data, ColumnNames);
	   table.setPreferredScrollableViewportSize(new Dimension(500, 70));
           table.setFillsViewportHeight(true);
           JScrollPane scrollPane = new JScrollPane(table);
	   add(scrollPane);
	
           JFrame frame = new JFrame(" Searched Books");
           frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);    
           frame.add(scrollPane);
           frame.setSize(400,400);
           frame.setVisible(true);
           
           book_id = null;
           title  = null;
           author_name = null;
           a_fname = null;
           a_minit = null;
           a_lname = null;
           
         }  
           }    
         catch(SQLException c)
          {
        	 c.printStackTrace();
          }
           
            
        } 
        
        
        //checkout
        if ( jButton3 == source)
	{		
	   try
           {
           int copiesLoanedByCard,totalCopies,copiesLoanedOut;
           book_id = String.valueOf(jTextField1.getText());
	   branch_id  = Integer.valueOf(jTextField2.getText());
           card_no = Integer.valueOf(jTextField3.getText());
         
           
             Connection conn = DriverManager.getConnection(
             "jdbc:mysql://localhost:3306/library?zeroDateTimeBehavior=convertToNull","root","password");
                        
                           
             PreparedStatement stmt1 = conn.prepareStatement("Select * from book_loans where card_no = ? and date_in is null ");
             stmt1.setInt(1,card_no);
             ResultSet rset = stmt1.executeQuery();
             int rowCount = 0;
             while(rset.next())
              {
    
               rowCount = rowCount + 1;
              }
             
                          
             copiesLoanedByCard = rowCount;
             System.out.println("Books borrowed by the card holder" + copiesLoanedByCard);
             
             
            
            PreparedStatement stmt2 = conn.prepareStatement("Select no_of_copies from book_copies where book_id = ? and branch_id = ?");
            stmt2.setString(1,book_id);
            stmt2.setInt(2,branch_id);
            ResultSet rset1 = stmt2.executeQuery();
            rset1.first();
            totalCopies = rset1.getInt("no_of_copies");
            System.out.println("Total number of copies of the book at this branch: "+totalCopies);  
             
            PreparedStatement stmt3 = conn.prepareStatement("select * from book_loans where book_id = ? and branch_id = ? and date_in is null ");
            stmt3.setString(1,book_id);
            stmt3.setInt(2,branch_id);
            ResultSet rset2 = stmt3.executeQuery();
            rowCount = 0;
            while (rset2.next())
              {
                rowCount = rowCount + 1;
              }
            copiesLoanedOut = rowCount;
            System.out.println("Number of loaned out copies of the book at this branch: "+copiesLoanedOut);
            
            
            if ( (copiesLoanedByCard < 3) && (totalCopies != copiesLoanedOut) )
            {
                PreparedStatement stmt4 = conn.prepareStatement("Insert into book_loans(book_id,branch_id,card_no,date_out,due_date) values(?,?,?,curdate(),date_add(curdate(),interval 14 day))");
                stmt4.setString(1,book_id);
                stmt4.setInt(2,branch_id);
                stmt4.setInt(3,card_no);
                stmt4.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Entered into book_loans table!");
                
                
            }
            else
                if(copiesLoanedByCard >= 3)
                {
                    JOptionPane.showMessageDialog(null, "A cardholder is permitted a maximum of 3 book loans. Cardholder already has three book loans.");
                }
                else if(totalCopies == copiesLoanedOut)
                {
                    JOptionPane.showMessageDialog(null, "Sorry, this book is not available.");
                }
              
           
              }  
           
             catch(NumberFormatException n)
          {
        	 //c.printStackTrace();
              JOptionPane.showMessageDialog(null, "Please enter required details.");
              
              
          }
          catch(SQLException c)
           {
             c.printStackTrace();
           }

        } 

                
    // search borrowers 
        if ( jButton5 == source)
	{		
	   fname = String.valueOf(jTextField10.getText());
           lname = String.valueOf(jTextField11.getText());
           borrower_address = String.valueOf(jTextField12.getText());
           phone = String.valueOf(jTextField15.getText());
           
  
           try
           {
             
              if((fname.equals(""))&&(lname.equals(""))&&(borrower_address.equals("")))
                {
                  JOptionPane.showMessageDialog(null, "Please enter values.");
                  
                }  
               
              else
              {
             Connection conn = DriverManager.getConnection(
             "jdbc:mysql://localhost:3306/library?zeroDateTimeBehavior=convertToNull","root","password");
             PreparedStatement stmt = conn.prepareStatement("Select * from borrower where fname like ? and lname like ? and address like ? and phone like ?");
             stmt.setString(1,"%"+fname+"%");
             stmt.setString(2,"%"+lname+"%");
             stmt.setString(3,"%"+borrower_address+"%");
             stmt.setString(4,"%"+phone+"%");
             ResultSet rset = stmt.executeQuery();
             
             int rowCount = 0;
             
             if(rset.next())
             {    
             {
                 rowCount = rowCount + 1;
                 
             }
             
             System.out.println("rowCount" + rowCount);
            
           
            Object data[][] = new Object[rowCount][5];
            rset.beforeFirst(); 
         
            for(int i=0;i<=(rowCount-1);i++)
             {
             if(rset.next()) 
              {   
                      data[i][0] = rset.getInt("card_no");
                      data[i][1] = rset.getString("fname");
                      data[i][2] = rset.getString("lname");
                      data[i][3] = rset.getString("address");
                      data[i][4] = rset.getString("phone");
                      
               }
                 
            }  
           String[] ColumnNames = {"Card Number","First Name","Last Name","Address","Phone"};
	   final JTable table = new JTable(data, ColumnNames);
	   table.setPreferredScrollableViewportSize(new Dimension(500, 70));
           table.setFillsViewportHeight(true);
           JScrollPane scrollPane = new JScrollPane(table);
	   add(scrollPane);
	
           
           JFrame frame = new JFrame("Borrowers");
           frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);    
           frame.add(scrollPane);
           frame.setSize(400,400);
           frame.setVisible(true);
           }
           else
             {                
                    JOptionPane.showMessageDialog(null, "Borrower does not exist!");
             }     
           
              }   
         }  
         catch(SQLException c)
          {
        	 c.printStackTrace();
          }

        } 
        
        
        //create new borrower
        if ( jButton4 == source)
	{		
	   boolean recordExists = false;
           
           String fnameFromTable = new String();
           String lnameFromTable = new String();
           String addressFromTable = new String();
          
           fname = String.valueOf(jTextField10.getText());
	   lname = String.valueOf(jTextField11.getText());
	   borrower_address = String.valueOf(jTextField12.getText());                   
           phone = String.valueOf(jTextField15.getText());
                    
        
           try
           {
             Connection conn = DriverManager.getConnection(
             "jdbc:mysql://localhost:3306/library?zeroDateTimeBehavior=convertToNull","root","password");
             
             
             if((fname.equals(""))||(lname.equals(""))||(borrower_address.equals("")))
                {
                  JOptionPane.showMessageDialog(null, "Please enter all name and address details.");
                  recordExists = true;
                }
             
             PreparedStatement stmt1 = conn.prepareStatement("Select * from borrower");
             ResultSet rset = stmt1.executeQuery();
             
            
             int rowCount = 0;
             while(rset.next())
              {    
               fnameFromTable = rset.getString("fname");
               lnameFromTable = rset.getString("lname");
               addressFromTable = rset.getString("address");
               
                            
               
               if((fnameFromTable.equalsIgnoreCase(fname))&&(lnameFromTable.equalsIgnoreCase(lname))&&(addressFromTable.equalsIgnoreCase(borrower_address)))
                {
                  JOptionPane.showMessageDialog(null, "This borrower already exists!");
                  recordExists = true;
                }
              }
              
             rset.last();
            
             int lastCardNumber = rset.getInt("card_no");
             int newCardNumber = lastCardNumber + 1;
             
              
              
              if(recordExists == false)
              {
                  PreparedStatement stmt2 = conn.prepareStatement("Insert into borrower(card_no,fname,lname,address,phone) values(?,?,?,?,?)");
                  stmt2.setInt (1, newCardNumber);
                  stmt2.setString(2, fname);
                  stmt2.setString(3, lname);
                  stmt2.setString(4, borrower_address);
                  stmt2.setString(5, phone);
                  stmt2.executeUpdate();
                  
                  JOptionPane.showMessageDialog(null, "Borrower has been created.");
              }
           }  
          catch(SQLException c)
           {
             c.printStackTrace();
           }

        } 
        
        
        //show loaned books
        
        if ( jButton6 == source)
        {
            try
           {
           book_id = String.valueOf(jTextField7.getText());
           card_no = Integer.valueOf(jTextField8.getText());
           fname = String.valueOf(jTextField9.getText());
           lname = String.valueOf(jTextField16.getText());
           
                     
          
             Connection conn = DriverManager.getConnection(
             "jdbc:mysql://localhost:3306/library?zeroDateTimeBehavior=convertToNull","root","password");
             
                                         
             PreparedStatement stmt = conn.prepareStatement("Select loan_id,book_id,branch_id,a.card_no,date_out,due_date,date_in from book_loans a left outer join borrower b on a.card_no=b.card_no where book_id like ? and a.card_no = ? and fname like ? and lname like ? and a.date_in is null ");
                          
            stmt.setString(1,"%"+book_id+"%");
            stmt.setInt(2,card_no);
            stmt.setString(3,"%"+fname+"%");
            stmt.setString(4,"%"+lname+"%");
            ResultSet rset = stmt.executeQuery();
            int rowCount = 0;
            while(rset.next())
              {
    
               rowCount = rowCount + 1;
              }
            System.out.println("rowCount"+rowCount);
            dataCheckIn = new Object[rowCount][7];
            rset.beforeFirst();
            
            if (rowCount == 0)
                
            {
             JOptionPane.showMessageDialog(null, "No book loans with entered details.");
            }   
            
            else
            {
        String[] ColumnNamesforCheckIn = {"Loan ID","Book ID","Branch ID","Card Number","Date out","Due date","Date in"};
                
            
        for(int i=0;i<=(rowCount-1);i++)
             {
                                            
                 if(rset.next()) 
                              
              {   
                  
                      dataCheckIn[i][0] = rset.getInt("loan_id");
                      dataCheckIn[i][1] = rset.getString("book_id");
                      dataCheckIn[i][2] = rset.getString("branch_id");
                      dataCheckIn[i][3] = rset.getInt("card_no");
                      dataCheckIn[i][4] = rset.getString("date_out");
                      dataCheckIn[i][5] = rset.getString("due_date");
                      dataCheckIn[i][6] = rset.getString("date_in");
                      System.out.println(rset.getInt("card_no"));
                      model.addRow(new Object[]{dataCheckIn[i][0],dataCheckIn[i][1],dataCheckIn[i][2],dataCheckIn[i][3],dataCheckIn[i][4],dataCheckIn[i][5],dataCheckIn[i][6]});
                      
               }
                 
              }
               
	         tableForBookCheckIn.setPreferredScrollableViewportSize(new Dimension(500, 70));
                 tableForBookCheckIn.setFillsViewportHeight(true);
                 
                 JScrollPane scrollPaneForBookCheckIn = new JScrollPane(tableForBookCheckIn);
                 add(scrollPaneForBookCheckIn);
                 
                 
                 frameForBookCheckIn = new JFrame("Books Loaned");
                 frameForBookCheckIn.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);    
                 frameForBookCheckIn.setSize(400,400);
                 frameForBookCheckIn.add(scrollPaneForBookCheckIn);
                 frameForBookCheckIn.setVisible(true);
                 
             

                                  
                 model = new DefaultTableModel(dataCheckIn,ColumnNamesforCheckIn); 
                 tableForBookCheckIn.setModel(model); 
                 
                 tableForBookCheckIn.addMouseListener(new MouseAdapter() {
                    
                     @Override       
                        
                        public void mouseClicked(MouseEvent e)
                        {
                          
                          int row =  tableForBookCheckIn.rowAtPoint(new Point(e.getX(), e.getY()));
                          System.out.println("row"+row);
                          loan_ID=( tableForBookCheckIn.getModel().getValueAt(row, 0)).toString();
                          jTextField13.setText(loan_ID);
                          
                        } 
             
             });
             
            }     
           }                                                    
                
                
           catch(NumberFormatException n)
          {
        	 
              JOptionPane.showMessageDialog(null, "Please enter required details.");
              
              
          }
	
           
         catch(SQLException c)
          {
        	 c.printStackTrace();
              
              
          }

        }
        
        
        //checkin
        
        if ( jButton1 == source)
        {
            try
           {
           int Loan = Integer.valueOf(jTextField13.getText());
           
          
             Connection conn = DriverManager.getConnection(
             "jdbc:mysql://localhost:3306/library?zeroDateTimeBehavior=convertToNull","root","password");
            
                       
                                   
           
             PreparedStatement stmt = conn.prepareStatement("update book_loans set date_in = curdate() where loan_id = ? ");
             stmt.setInt(1,Loan);
             
             stmt.executeUpdate();
             
             JOptionPane.showMessageDialog(null, "date_in entered in book_loans table.");
             
             
             /**/
             
             PreparedStatement stmt2 = conn.prepareStatement("select due_date, date_in from book_loans where loan_id = ? ");
             stmt2.setInt(1,Loan);
             
             ResultSet rset = stmt2.executeQuery();
             
             int rowCount = 0;
             while(rset.next())
              {
    
               rowCount = rowCount + 1;
              }
            System.out.println("rowCount"+rowCount);  
            rset.first();
             //due_date = rset.getDate(1);
             //date_in = rset.getDate(2);
             
             Date due_date = rset.getDate("due_date");
             Date date_in = rset.getDate("date_in");
             
             
            if(date_in.compareTo(due_date)>0)
             {
                 JOptionPane.showMessageDialog(null, "date_in is past due_date! Fine charged.");
             
             long D1= due_date.getTime();
             long D2= date_in.getTime();
             long diff = D2-D1;
             int days = (int)(diff/(1000*60*60*24));
             System.out.println("days"+days);
             float fine = (float) (days*0.25);
             
             PreparedStatement stmt1 = conn.prepareStatement("insert into fines values (? , ?, ?) ");
             stmt1.setInt(1,Loan);
             stmt1.setFloat(2,fine);
             stmt1.setBoolean(3,false);
             
             stmt1.executeUpdate();     
             
             }
            
           }      
            
             catch(NumberFormatException n)
          {
        	 
              JOptionPane.showMessageDialog(null, "loan_id not populated!");
              
              
          }
           
         catch(SQLException c)
          {
        	 c.printStackTrace();
          }

        }
        
        
        
           //show fines
        
        if ( jButton8 == source)
        {
                     
           try
           {
             Connection conn = DriverManager.getConnection(
             "jdbc:mysql://localhost:3306/library?zeroDateTimeBehavior=convertToNull","root","password");
             
                                  
            PreparedStatement stmt = conn.prepareStatement("Select a.card_no, sum(b.fine_amt) as total_fine, b.paid from book_loans a left outer join fines b on a.loan_id=b.loan_id where b.paid = false group by a.card_no ; ");
             
            ResultSet rset = stmt.executeQuery();
            
            int rowCount = 0;
            while(rset.next())
              {
    
               rowCount = rowCount + 1;
              }
            System.out.println("rowCount"+rowCount);
            dataFine = new Object[rowCount][3];
            rset.beforeFirst();
            
            if (rowCount == 0)
                
            {
             JOptionPane.showMessageDialog(null, "No fines.");
            }   
            
            else
            {
        String[] ColumnNamesforFine = {"Card Number","Total Fine($)","Paid"};
                
            
        for(int i=0;i<=(rowCount-1);i++)
             {
                                            
                 if(rset.next()) 
                              
              {   
                  
                      dataFine[i][0] = rset.getInt("card_no");
                      dataFine[i][1] = rset.getString("total_fine");
                      dataFine[i][2] = rset.getString("paid");
                      
                      model1.addRow(new Object[]{dataFine[i][0],dataFine[i][1],dataFine[i][2]});
                      
               }
                 
              }
               
	         tableForFine.setPreferredScrollableViewportSize(new Dimension(500, 70));
                 tableForFine.setFillsViewportHeight(true);
                 
                 JScrollPane scrollPaneForFine = new JScrollPane(tableForFine);
                 add(scrollPaneForFine);
                 
                 
                 frameForFine = new JFrame("Fines");
                 frameForFine.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);    
                 frameForFine.setSize(400,400);
                 frameForFine.add(scrollPaneForFine);
                 frameForFine.setVisible(true);
                 
             

                                  
                 model1 = new DefaultTableModel(dataFine,ColumnNamesforFine); 
                 tableForFine.setModel(model1); 
                 
                 tableForFine.addMouseListener(new MouseAdapter() {
            private String Card_No;
                    
                     @Override       
                        
                        public void mouseClicked(MouseEvent e)
                        {
                          
                          int row =  tableForFine.rowAtPoint(new Point(e.getX(), e.getY()));
                          System.out.println("row"+row);
                          Card_No =( tableForFine.getModel().getValueAt(row, 0)).toString();
                          jTextField20.setText(Card_No);
   
                        } 
             
             });
             
            }     
           } 
        
         catch(SQLException c)
          {
        	 c.printStackTrace();
          }

        }
        
        //pay fine?
        
        if ( jButton9 == source)
        {
                    
                     
                     
           try
           {
             Connection conn = DriverManager.getConnection(
             "jdbc:mysql://localhost:3306/library?zeroDateTimeBehavior=convertToNull","root","password");
             
             
                             
             //PreparedStatement stmt = conn.prepareStatement("Select a.card_no, a.loan_id, b.fine_amt, b.paid from book_loans a left outer join fines b on a.loan_id=b.loan_id where b.paid = false group by a.card_no  ");
                          
            PreparedStatement stmt = conn.prepareStatement("Select a.card_no, a.loan_id, b.fine_amt, b.paid from book_loans a left outer join fines b on a.loan_id=b.loan_id where b.paid = false ; ");
             
            ResultSet rset = stmt.executeQuery();
            
            int rowCount = 0;
            while(rset.next())
              {
    
               rowCount = rowCount + 1;
              }
            System.out.println("rowCount"+rowCount);
            dataPayFine = new Object[rowCount][4];
            rset.beforeFirst();
            
            if (rowCount == 0)
                
            {
             JOptionPane.showMessageDialog(null, "No fines.");
            }   
            
            else
            {
        String[] ColumnNamesforPayFine = {"Card Number","Loan ID","Fine($)","Paid"};
                
            
        for(int i=0;i<=(rowCount-1);i++)
             {
                                            
                 if(rset.next()) 
                              
              {   
                  
                      dataPayFine[i][0] = rset.getInt("card_no");
                      dataPayFine[i][1] = rset.getInt("loan_id");
                      dataPayFine[i][2] = rset.getString("fine_amt");
                      dataPayFine[i][3] = rset.getString("paid");
                      
                      model2.addRow(new Object[]{dataPayFine[i][0],dataPayFine[i][1],dataPayFine[i][2],dataPayFine[i][3]});
                      
               }
                 
              }
               
	         tableForPayFine.setPreferredScrollableViewportSize(new Dimension(500, 70));
                 tableForPayFine.setFillsViewportHeight(true);
                 
                 JScrollPane scrollPaneForPayFine = new JScrollPane(tableForPayFine);
                 add(scrollPaneForPayFine);
                 
                 
                 frameForPayFine = new JFrame("Pay Fine");
                 frameForPayFine.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);    
                 frameForPayFine.setSize(400,400);
                 frameForPayFine.add(scrollPaneForPayFine);
                 frameForPayFine.setVisible(true);
                 
             

                                  
                 model2 = new DefaultTableModel(dataPayFine,ColumnNamesforPayFine); 
                 tableForPayFine.setModel(model2); 
                 
                 tableForPayFine.addMouseListener(new MouseAdapter() {
                    
                     @Override       
                        
                        public void mouseClicked(MouseEvent e)
                        {
                          
                          int row =  tableForPayFine.rowAtPoint(new Point(e.getX(), e.getY()));
                          System.out.println("row"+row);
                          loan_ID =( tableForPayFine.getModel().getValueAt(row, 1)).toString();
                          jTextField14.setText(loan_ID);
   
                        } 
             
             });
             
            }     
           } 
        
         catch(SQLException c)
          {
        	 c.printStackTrace();
          }

        }
        
        
        //fine paid
          if ( jButton7 == source)
        {
           try
           {
           int Loan = Integer.valueOf(jTextField14.getText());
            
           
             Connection conn = DriverManager.getConnection(
             "jdbc:mysql://localhost:3306/library?zeroDateTimeBehavior=convertToNull","root","password");
            
                          
             PreparedStatement stmt = conn.prepareStatement("update fines set paid = true  where loan_id = ? ");
             stmt.setInt(1,Loan);
             
             stmt.executeUpdate();
             
              
             JOptionPane.showMessageDialog(null, "Fine paid.");
              
             }
           
            catch(NumberFormatException n)
          {
        	 
              JOptionPane.showMessageDialog(null, "loan_id not populated!");
              
              
          }
                      
         catch(SQLException c)
          {
        	 c.printStackTrace();
          }

        }

        
 /*
        
        //checkin
        if ( jButton1 == source)
	{		
	  
           book_id = String.valueOf(jTextField7.getText());
           card_no = Integer.valueOf(jTextField8.getText());
           fname = String.valueOf(jTextField9.getText());
           lname = String.valueOf(jTextField16.getText());
            
            try
           {
             
              Connection conn = DriverManager.getConnection(
             "jdbc:mysql://localhost:3306/library?zeroDateTimeBehavior=convertToNull","root","password");
             
             PreparedStatement stmt = conn.prepareStatement("Select a.loan_id, a.branch_id from book_loans a left outer join borrower b on a.card_no=b.card_no where a.book_id like ? and a.card_no = ? and b.fname like ? and b.lname like ? ");
             
             stmt.setString(1,"%"+book_id+"%");
             stmt.setInt(2,card_no);
             stmt.setString(3,"%"+fname+"%");
             stmt.setString(4,"%"+lname+"%");
             ResultSet rset = stmt.executeQuery();
                                      
             
             System.out.println("stmt"+stmt.toString());
             int rowCount = 0;
            while(rset.next())
            {
    
               rowCount = rowCount + 1;
              }
            System.out.println("rowCount"+rowCount);
                           
                              
                 for(int i=0;i<rowCount;i++)    
                 {
                     if(rset.first())
                     {
                                                             
                     int loan_id_local=rset.getInt(1);
                     int branch_id_local=rset.getInt(2); 
                     
                   
                 PreparedStatement stmt2 = conn.prepareStatement("Select loan_id from book_loans where book_id like ? and branch_id = ? and card_no = ? and date_in is null  ");
                 stmt2.setString(1,"%"+book_id+"%");
                 stmt2.setInt(2,branch_id_local);
                 stmt2.setInt(3,card_no);
                                  
                 ResultSet rset2= stmt2.executeQuery(); 
                 System.out.println("stmt2"+stmt2.toString());
                 
                 int rowCount2 = 0;
                 while(rset2.next())
              {
    
               rowCount2 = rowCount2 + 1;
              }
               System.out.println("rowCount2"+rowCount2);
               
                for(int j=0;j<rowCount2;j++)    
                 {
                     if(rset2.first())
                     {
                                                             
                     int loan_id_local2=rset2.getInt(1);
                 
                                
                 PreparedStatement stmt3 = conn.prepareStatement("Update book_loans set date_in = curdate() where loan_id = ? ");
                 stmt3.setInt(1, loan_id_local2);
                 stmt3.executeUpdate();
                 System.out.println("stmt3"+stmt3.toString());
                 JOptionPane.showMessageDialog(null, "date_in entered in book_loans table.");
                 
                 }                    
                 }
                 }
                 
                
                 
               }
                 
           }
            
                  
         catch(SQLException c)
          {
        	 c.printStackTrace();
          }

        } 
   
*/
        
    
    }        
}